name: Create Azure AKS With Terraform
on:
   workflow_dispatch:
  

permissions:
      id-token: write
      contents: read
jobs: 
  AKS-Cluster-Deployment:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: AKS
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        
      - name: 'Az CLI login'
       
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: latest
          cli_config_credentials_token: ${{ secrets.ARM_OIDC_TOKEN }}

      - name: Terraform Init
        id: init
        run: |
         
           terraform init
           
      
      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: |
         # terraform force-unlock -force a3e275d4-66af-0c7b-b878-0e70652847ff 
          terraform plan
          # terraform force-unlock a3e275d4-66af-0c7b-b878-0e70652847ff
        
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Terraform Output
        run: terraform output
        
      - name: enable acr admin user
        run: |
           az acr update -n azacrforsas --admin-enabled true

 
   #   - uses: mr-smithers-excellent/docker-build-push@v6
   #     name: Build & push Docker image
       
   #     with:
   #       image: demorepo/dodla
   #       tags: v1, latest
   #       registry: acrbildandpushimage.azurecr.io
   #       dockerfile: Dockerfile.ci
   #       username: ${{ secrets.DOCKER_USERNAME }}
   #       password: ${{ secrets.DOCKER_PASSWORD }}
#      - name: Deploy Application
#        run: |
#         az login
#         az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#         az aks get-credentials -n "cluster-mutual-mayfly" -g "demorg-careful-kingfish"
#         az aks update -n cluster-mutual-mayfly -g demorg-careful-kingfish --attach-acr azacrforsas
#         kubectl apply -f ./AKSApp/demoappdeploy.yaml
   #   - name: install Ingress Contoller
   #     run: |   
   #        kubectl create namespace ingress-sas
   #        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
   #        helm repo add stable https://charts.helm.sh/stable/
   #        helm repo update

   #        helm install ingress-nginx ingress-nginx/ingress-nginx --namespace ingress-sas --set controller.replicaCount=2 --set controller.nodeSelector."beta\.kubernetes\io/os"=linux --set defaultBackend.nodeSelector."beta\.kubernetes\io/os"=linux --set controller.service.externalTrafficPolicy=Local --set controller.service.loadBalancerIP="20.235.141.9"
          
   #        kubectl apply -f ./AKSApp/demoappdeploy.yaml
   #       sleep 40
          
          
     
   #  # kubectl create secret docker-registry azacrforsas --namespace default --docker-server=azacrforsas.azurecr.io --docker-username=091fd078-3ba1-4aba-82f9-4cf3b28038a2 --docker-password=II~8Q~SD-ChEEE_LHX6VjjfcgS2WlPy4-VFvybb~
      
      

